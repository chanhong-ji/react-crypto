{"version":3,"sources":["routes/Price.tsx","api.ts","atoms.ts","routes/Chart.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["ChartBox","styled","div","props","theme","cardBgColor","ChartLine","Price","data","useLocation","state","priceData","quotes","USD","rank","total_supply","price","market_cap","ath_date","ath_price","BASE_URL","fetchCoins","fetch","then","response","json","isDarkAtom","atom","key","default","Chart","coinId","useQuery","r","fetchCoinHistory","isLoading","chartData","isDark","useRecoilValue","length","type","series","name","map","day","x","time_close","y","open","high","low","close","options","mode","chart","height","toolbar","show","background","title","text","align","grid","yaxis","tooltip","enabled","xaxis","Title","h1","accentColor","Loader","span","Container","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","BackBtn","Coin","useParams","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinPriceInfo","refetchInterval","tickerLoading","tickerData","loading","Helmet","to","symbol","toFixed","description","max_supply","pathname","path","CoinsList","ul","li","Img","img","Moon","bgColor","Coins","useRecoilState","setDark","onClick","current","slice","coin","id","src","toLowerCase","alt","Router","basename","process","exact","darkTheme","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"uMAGMA,EAAWC,IAAOC,IAAV,2NACQ,SAACC,GAAD,OAAWA,EAAMC,MAAMC,eASvCC,EAAYL,IAAOC,IAAV,8JA+EAK,EApCD,WAAO,IAEbC,EADYC,cAAVC,MACWF,KACbG,EAAS,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAMI,OAAOC,IAC/B,OACE,8BACE,eAACb,EAAD,WACE,eAACM,EAAD,WACE,wCACA,sCAAOE,QAAP,IAAOA,OAAP,EAAOA,EAAMM,UAEf,eAACR,EAAD,WACE,gDACA,sCAAOE,QAAP,IAAOA,OAAP,EAAOA,EAAMO,kBAEf,eAACT,EAAD,WACE,yCACA,sCAAOK,QAAP,IAAOA,OAAP,EAAOA,EAAWK,WAEpB,eAACV,EAAD,WACE,8CACA,sCAAOK,QAAP,IAAOA,OAAP,EAAOA,EAAWM,gBAEpB,eAACX,EAAD,WACE,4CACA,sCAAOK,QAAP,IAAOA,OAAP,EAAOA,EAAWO,cAEpB,eAACZ,EAAD,WACE,6CACA,sCAAOK,QAAP,IAAOA,OAAP,EAAOA,EAAWQ,qB,QCrFtBC,EAAW,iCAEV,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIF,EAAJ,WAAsBG,MAAK,SAACC,GAAD,OAAcA,EAASC,U,iECDnDC,EAAaC,YAAK,CAC7BC,IAAK,SACLC,SAAS,ICyEIC,EAxDD,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAqB,EACGC,mBACrC,CAAC,QAASD,IACV,kBFVG,SAA0BA,GAG/B,OAAOT,MAAM,oDAAD,OAC0CS,IACpDR,MAAK,SAACU,GAAD,OAAOA,EAAER,UEKRS,CAAiBH,MAFjBI,EAD4B,EAC5BA,UAAiBC,EADW,EACjB5B,KAIb6B,EAASC,YAAeZ,GAE9B,OACE,8BACGS,EACC,oBACEC,GAAaA,EAAUG,QAAU,EACnC,cAAC,IAAD,CACEC,KAAK,cACLC,OAAQ,CACN,CACEC,KAAM,QACNlC,KAAM4B,EAAUO,KAAI,SAACC,GAAD,MAAU,CAC5BC,EAAGD,EAAIE,WACPC,EAAG,CAACH,EAAII,KAAMJ,EAAIK,KAAML,EAAIM,IAAKN,EAAIO,aAI3CC,QAAS,CACPhD,MAAO,CACLiD,KAAMhB,EAAS,OAAS,SAE1BiB,MAAO,CACLd,KAAM,cACNe,OAAQ,IACRC,QAAS,CACPC,MAAM,GAERC,WAAY,eAEdC,MAAO,CACLC,KAAM,oBACNC,MAAO,QAETC,KAAM,CAAEL,MAAM,GACdM,MAAO,CACLN,MAAM,EACNO,QAAS,CACPC,SAAS,IAGbC,MAAO,CACL1B,KAAM,eAIV,Q,QCzDJ2B,EAAQlE,IAAOmE,GAAV,+DAEA,SAACjE,GAAD,OAAWA,EAAMC,MAAMiE,eAE5BC,EAASrE,IAAOsE,KAAV,sEAINC,EAAYvE,IAAOC,IAAV,0FAKTuE,EAASxE,IAAOyE,OAAV,6IAONC,EAAW1E,IAAOC,IAAV,8MAGQ,SAACC,GAAD,OAAWA,EAAMC,MAAMC,eAKvCuE,EAAe3E,IAAOC,IAAV,kOAWZ2E,EAAc5E,IAAO6E,EAAV,sEAIXC,EAAO9E,IAAOC,IAAV,2HAMJ8E,EAAM/E,IAAOsE,KAAV,ySAKa,SAACpE,GAAD,OAAWA,EAAMC,MAAMC,eAOlC,SAACF,GAAD,OACPA,EAAM8E,SAAW9E,EAAMC,MAAMiE,YAAclE,EAAMC,MAAM8E,aAErDC,EAAUlF,IAAOC,IAAV,oPAES,SAACC,GAAD,OAAWA,EAAMC,MAAMC,eAqK9B+E,GA7FF,WAAO,IAAD,MACTrD,EAAWsD,cAAXtD,OACArB,EAAUD,cAAVC,MACF4E,EAAaC,YAAc,IAAD,OAAKxD,EAAL,WAC1ByD,EAAaD,YAAc,IAAD,OAAKxD,EAAL,WAJf,EAMkCC,mBACjD,CAAC,OAAQD,IACT,kBH3JG,SAAuBA,GAC5B,OAAOT,MAAM,GAAD,OAAIF,EAAJ,kBAAsBW,IAAUR,MAAK,SAACU,GAAD,OAAOA,EAAER,UG0JlDgE,CAAc1D,MAFH2D,EANF,EAMTvD,UAA8BwD,EANrB,EAMenF,KANf,EAUsCwB,mBACrD,CAAC,SAAUD,IACX,kBH3JG,SAA4BA,GACjC,OAAOT,MAAM,GAAD,OAAIF,EAAJ,oBAAwBW,IAAUR,MAAK,SAACU,GAAD,OAAOA,EAAER,UG0JpDmE,CAAmB7D,KACzB,CAAE8D,gBAAiB,MAHFC,EAVF,EAUT3D,UAAgC4D,EAVvB,EAUiBvF,KAK5BwF,EAAUN,GAAeI,EAC/B,OACE,eAACtB,EAAD,WACE,cAACyB,EAAA,EAAD,UACE,iCACQ,OAALvF,QAAK,IAALA,OAAA,EAAAA,EAAOgC,MAAOhC,EAAMgC,KAAOsD,EAAU,aAAH,OAAkBL,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUjD,SAGnE,eAAC+B,EAAD,WACE,cAACN,EAAD,WACQ,OAALzD,QAAK,IAALA,OAAA,EAAAA,EAAOgC,MAAOhC,EAAMgC,KAAOsD,EAAU,aAAH,OAAkBL,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUjD,OAEjE,cAACyC,EAAD,UACE,cAAC,IAAD,CAAMe,GAAG,IAAT,iCAGHF,EACC,mCACE,cAAC1B,EAAD,2BAGF,qCACE,eAACK,EAAD,WACE,eAACC,EAAD,WACE,yCACA,sCAAOe,QAAP,IAAOA,OAAP,EAAOA,EAAU7E,UAEnB,eAAC8D,EAAD,WACE,2CACA,sCAAOe,QAAP,IAAOA,OAAP,EAAOA,EAAUQ,YAEnB,eAACvB,EAAD,WACE,0CACA,sCAAOmB,QAAP,IAAOA,GAAP,UAAOA,EAAYnF,cAAnB,iBAAO,EAAoBC,WAA3B,iBAAO,EAAyBG,aAAhC,aAAO,EAAgCoF,QAAQ,WAGnD,cAACvB,EAAD,iBAAcc,QAAd,IAAcA,OAAd,EAAcA,EAAUU,cACxB,eAAC1B,EAAD,WACE,eAACC,EAAD,WACE,gDACA,sCAAOmB,QAAP,IAAOA,OAAP,EAAOA,EAAYhF,kBAErB,eAAC6D,EAAD,WACE,+CACA,sCAAOmB,QAAP,IAAOA,OAAP,EAAOA,EAAYO,mBAIvB,eAACvB,EAAD,WACE,cAACC,EAAD,CAAKC,SAAyB,OAAfK,EAAf,SACE,cAAC,IAAD,CACEY,GAAI,CACFK,SAAS,IAAD,OAAMxE,EAAN,UACRrB,MAAO,CAAEF,KAAMuF,IAHnB,qBASF,cAACf,EAAD,CAAKC,SAAyB,OAAfO,EAAf,SACE,cAAC,IAAD,CAAMU,GAAE,WAAMnE,EAAN,UAAR,wBAIJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyE,KAAI,iBAAX,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,iBAAX,SACE,cAAC,EAAD,CAAOzE,OAAQA,gB,QCrOvByC,GAAYvE,IAAOC,IAAV,0FAMTuE,GAASxE,IAAOyE,OAAV,0IAQN+B,GAAYxG,IAAOyG,GAAV,0BAETtB,GAAOnF,IAAO0G,GAAV,qVACY,SAACxG,GAAD,OAAWA,EAAMC,MAAMC,eAClC,SAACF,GAAD,OAAWA,EAAMC,MAAM8E,aAYnB,SAAC/E,GAAD,OAAWA,EAAMC,MAAMiE,eAKhCF,GAAQlE,IAAOmE,GAAV,+DAEA,SAACjE,GAAD,OAAWA,EAAMC,MAAMiE,eAG5BC,GAASrE,IAAOC,IAAV,gDAIN0G,GAAM3G,IAAO4G,IAAV,oFAMHC,GAAO7G,IAAOC,IAAV,oUAYK,SAACC,GAAD,MAA2B,SAAfA,EAAMkD,KAAkB,OAAS,UAIpC,SAAClD,GAAD,OAAWA,EAAMC,MAAM2G,WAmDhCC,I,GAAAA,GArCf,WAAkB,IAAD,EACahF,mBAAkB,WAAYX,GAAlDc,EADO,EACPA,UAAW3B,EADJ,EACIA,KADJ,EAEWyG,YAAevF,GAF1B,oBAERW,EAFQ,KAEA6E,EAFA,KAIf,OACE,eAAC,GAAD,WACE,cAACjB,EAAA,EAAD,UACE,2CAEF,eAAC,GAAD,WACE,cAACa,GAAD,CAAMzD,KAAMhB,EAAS,OAAS,QAAS8E,QAPtB,kBAAMD,GAAQ,SAACE,GAAD,OAAcA,MAO7C,SACE,0BAEF,cAAC,GAAD,sBAEDjF,EACC,cAAC,GAAD,yBAEA,cAACsE,GAAD,iBACGjG,QADH,IACGA,OADH,EACGA,EAAM6G,MAAM,EAAG,KAAK1E,KAAI,SAAC2E,GAAD,OACvB,cAAC,GAAD,UACE,eAAC,IAAD,CACEpB,GAAI,CAAEK,SAAS,IAAD,OAAMe,EAAKC,IAAM7G,MAAO,CAAEgC,KAAM4E,EAAK5E,OADrD,UAGE,cAACkE,GAAD,CACEY,IAAG,oDAA+CF,EAAKnB,OAAOsB,eAC9DC,IAAI,KAELJ,EAAK5E,KAPR,cADS4E,EAAKC,aCzFbI,GAfA,WACb,OACE,cAAC,IAAD,CAAeC,SAAUC,gBAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOrB,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOsB,OAAK,EAACtB,KAAK,IAAlB,SACE,cAAC,GAAD,Y,SCVGuB,GAA0B,CACrChB,QAAS,UACT7B,UAAW,UACXb,YAAa,UACbhE,YAAa,sBAGF2H,GAA2B,CACtCjB,QAAS,aACT7B,UAAW,QACXb,YAAa,UAEbhE,YAAa,0BCPT4H,GAAcC,YAAH,u4CAmDI,SAAC/H,GAAD,OAAWA,EAAMC,MAAM2G,WAClC,SAAC5G,GAAD,OAAWA,EAAMC,MAAM8E,aA2BlBiD,OAff,WACE,IAAM9F,EAASC,YAAeZ,GAC9B,OACE,8BACE,mCACE,eAAC,IAAD,CAAetB,MAAOiC,EAAS0F,GAAYC,GAA3C,UACE,cAACC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,sBAAD,CAAoBG,eAAe,YCzEvCC,GAAc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,sBAAD,CAAqBC,OAAQL,GAA7B,SACE,cAAC,GAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.289276ef.chunk.js","sourcesContent":["import { useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst ChartBox = styled.div`\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  padding: 20px 30px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  line-height: 1.4;\r\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 0px 0px 1px;\r\n`;\r\n\r\nconst ChartLine = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  margin-bottom: 6px;\r\n`;\r\n\r\ninterface IPriceData {\r\n  data: {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    circulating_supply: number;\r\n    total_supply: number;\r\n    max_supply: number;\r\n    beta_value: number;\r\n    first_data_at: string;\r\n    last_updated: string;\r\n    quotes: {\r\n      USD: {\r\n        price: number;\r\n        volume_24h: number;\r\n        volume_24h_change_24h: number;\r\n        market_cap: number;\r\n        market_cap_change_24h: number;\r\n        percent_change_15m: number;\r\n        percent_change_30m: number;\r\n        percent_change_1h: number;\r\n        percent_change_6h: number;\r\n        percent_change_12h: number;\r\n        percent_change_24h: number;\r\n        percent_change_7d: number;\r\n        percent_change_30d: number;\r\n        percent_change_1y: number;\r\n        ath_price: number;\r\n        ath_date: string;\r\n        percent_from_price_ath: number;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nconst Price = () => {\r\n  const { state } = useLocation<IPriceData>();\r\n  const data = state.data;\r\n  const priceData = data?.quotes.USD;\r\n  return (\r\n    <div>\r\n      <ChartBox>\r\n        <ChartLine>\r\n          <span>Rank</span>\r\n          <span>{data?.rank}</span>\r\n        </ChartLine>\r\n        <ChartLine>\r\n          <span>Total Supply</span>\r\n          <span>{data?.total_supply}</span>\r\n        </ChartLine>\r\n        <ChartLine>\r\n          <span>Price</span>\r\n          <span>{priceData?.price}</span>\r\n        </ChartLine>\r\n        <ChartLine>\r\n          <span>Market Cap</span>\r\n          <span>{priceData?.market_cap}</span>\r\n        </ChartLine>\r\n        <ChartLine>\r\n          <span>Ath Date</span>\r\n          <span>{priceData?.ath_date}</span>\r\n        </ChartLine>\r\n        <ChartLine>\r\n          <span>Ath Price</span>\r\n          <span>{priceData?.ath_price}</span>\r\n        </ChartLine>\r\n      </ChartBox>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Price;\r\n","const BASE_URL = 'https://api.coinpaprika.com/v1';\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: String) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((r) => r.json());\r\n}\r\n\r\nexport function fetchCoinPriceInfo(coinId: String) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((r) => r.json());\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: String) {\r\n  // const endDate = Math.floor(Date.now() / 1000);\r\n  // const startDate = endDate - 60 * 60 * 24 * 7 * 2; //2주분\r\n  return fetch(\r\n    `https://ohlcv-api.nomadcoders.workers.dev?coinId=${coinId}`\r\n  ).then((r) => r.json());\r\n}\r\n","import { atom } from \"recoil\";\r\n\r\nexport const isDarkAtom = atom({\r\n  key: \"isDark\",\r\n  default: false,\r\n});\r\n","import { useQuery } from 'react-query';\r\nimport { fetchCoinHistory } from '../api';\r\nimport ApexChart from 'react-apexcharts';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { isDarkAtom } from '../atoms';\r\n\r\ninterface IChart {\r\n  coinId: string;\r\n}\r\n\r\ninterface IChartData {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nconst Chart = ({ coinId }: IChart) => {\r\n  const { isLoading, data: chartData } = useQuery<IChartData[]>(\r\n    ['chart', coinId],\r\n    () => fetchCoinHistory(coinId)\r\n  );\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        'Loading charts...'\r\n      ) : chartData && chartData.length >= 1 ? (\r\n        <ApexChart\r\n          type='candlestick'\r\n          series={[\r\n            {\r\n              name: 'Price',\r\n              data: chartData.map((day) => ({\r\n                x: day.time_close,\r\n                y: [day.open, day.high, day.low, day.close],\r\n              })),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: isDark ? 'dark' : 'light',\r\n            },\r\n            chart: {\r\n              type: 'candlestick',\r\n              height: 350,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: 'transparent',\r\n            },\r\n            title: {\r\n              text: 'CandleStick Chart',\r\n              align: 'left',\r\n            },\r\n            grid: { show: false },\r\n            yaxis: {\r\n              show: false,\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n            xaxis: {\r\n              type: 'datetime',\r\n            },\r\n          }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import {\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from 'react-router';\r\nimport styled from 'styled-components';\r\nimport Price from './Price';\r\nimport Chart from './Chart';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchCoinInfo, fetchCoinPriceInfo } from '../api';\r\nimport { useQuery } from 'react-query';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.header`\r\n  padding-top: 3vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 0px 0px 1px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n  line-height: 1.3;\r\n`;\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\nconst Tab = styled.span<{ isActive: Boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\r\n  a {\r\n    display: block;\r\n  }\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n`;\r\nconst BackBtn = styled.div`\r\n  padding: 5px 10px;\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  font-size: 13px;\r\n  border-radius: 5px;\r\n  align-self: flex-end;\r\n  margin-bottom: 20px;\r\n  margin-top: 5px;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\r\n`;\r\n\r\ninterface IRouteParams {\r\n  coinId: string;\r\n}\r\ninterface IRouteState {\r\n  name: string;\r\n}\r\ninterface IInfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  contract: string;\r\n  platform: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface IPriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_15m: number;\r\n      percent_change_30m: number;\r\n      percent_change_1h: number;\r\n      percent_change_6h: number;\r\n      percent_change_12h: number;\r\n      percent_change_24h: number;\r\n      percent_change_7d: number;\r\n      percent_change_30d: number;\r\n      percent_change_1y: number;\r\n      ath_price: number;\r\n      ath_date: string;\r\n      percent_from_price_ath: number;\r\n    };\r\n  };\r\n}\r\n\r\nconst Coin = () => {\r\n  const { coinId } = useParams<IRouteParams>();\r\n  const { state } = useLocation<IRouteState>();\r\n  const priceMatch = useRouteMatch(`/${coinId}/price`);\r\n  const chartMatch = useRouteMatch(`/${coinId}/chart`);\r\n\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<IInfoData>(\r\n    ['coin', coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickerLoading, data: tickerData } = useQuery<IPriceData>(\r\n    ['ticker', coinId],\r\n    () => fetchCoinPriceInfo(coinId),\r\n    { refetchInterval: 10000 }\r\n  );\r\n  const loading = infoLoading || tickerLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\r\n        </Title>\r\n        <BackBtn>\r\n          <Link to='/'>&larr; Go Back</Link>\r\n        </BackBtn>\r\n      </Header>\r\n      {loading ? (\r\n        <>\r\n          <Loader>Loading...</Loader>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>{infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>{tickerData?.quotes?.USD?.price?.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickerData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickerData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coinId}/price`,\r\n                  state: { data: tickerData },\r\n                }}\r\n              >\r\n                Price\r\n              </Link>\r\n            </Tab>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/:coinId/price`}>\r\n              <Price />\r\n            </Route>\r\n            <Route path={`/:coinId/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","import { useQuery } from 'react-query';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { fetchCoins } from '../api';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useRecoilState } from 'recoil';\r\nimport { isDarkAtom } from '../atoms';\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\r\n  a {\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  font-size: 30px;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Moon = styled.div<{ mode: string }>`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 20px;\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50%;\r\n  background-color: #f7e545;\r\n  &:hover {\r\n    cursor: grab;\r\n  }\r\n  div {\r\n    display: ${(props) => (props.mode === 'dark' ? 'span' : 'none')};\r\n    width: 23px;\r\n    height: 23px;\r\n    border-radius: 50%;\r\n    background-color: ${(props) => props.theme.bgColor};\r\n  }\r\n`;\r\n\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<ICoin[]>('allCoins', fetchCoins);\r\n  const [isDark, setDark] = useRecoilState(isDarkAtom);\r\n  const toggleDarkAtom = () => setDark((current) => !current);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Coin</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Moon mode={isDark ? 'dark' : 'light'} onClick={toggleDarkAtom}>\r\n          <div></div>\r\n        </Moon>\r\n        <Title>Coin</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{ pathname: `/${coin.id}`, state: { name: coin.name } }}\r\n              >\r\n                <Img\r\n                  src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                  alt=''\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coins;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/:coinId\">\r\n          <Coin />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: '#2f3640',\r\n  textColor: '#f5f6fa',\r\n  accentColor: '#9c88ff',\r\n  cardBgColor: 'rgba(0, 0, 0, 0.5)',\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: 'whitesmoke',\r\n  textColor: 'black',\r\n  accentColor: '#9c88ff',\r\n  // cardBgColor: \"rgba(0, 0, 0, 0.2)\",\r\n  cardBgColor: 'rgba(255, 255, 255, 1)',\r\n};\r\n","import { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport Router from './Router';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { darkTheme, lightTheme } from './theme';\nimport { useRecoilValue } from 'recoil';\nimport { isDarkAtom } from './atoms';\n\nconst GlobalStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n* {\n  box-sizing: border-box;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <div>\n      <>\n        <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n          <GlobalStyle />\n          <Router />\n          <ReactQueryDevtools initialIsOpen={true} />\n        </ThemeProvider>\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { RecoilRoot } from \"recoil\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <QueryClientProvider client={queryClient}>\r\n        <App />\r\n      </QueryClientProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}