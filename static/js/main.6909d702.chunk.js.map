{"version":3,"sources":["api.ts","routes/Price.tsx","routes/Chart.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinPriceInfo","coinId","r","ChartBox","styled","div","ChartLine","Price","useQuery","isLoading","data","priceData","quotes","USD","rank","total_supply","price","market_cap","ath_date","ath_price","Chart","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","chartData","type","series","name","map","day","x","time_close","y","open","high","low","close","options","theme","mode","chart","height","toolbar","show","background","title","text","align","grid","yaxis","tooltip","enabled","xaxis","Title","h1","props","accentColor","Loader","span","Container","Header","header","Overview","textBg","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","BackBtn","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","refetchInterval","tickerLoading","tickerData","loading","Helmet","to","symbol","toFixed","description","max_supply","path","CoinsList","ul","li","Img","img","Moon","bgColor","Coins","slice","coin","pathname","id","src","toLowerCase","alt","Router","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.6909d702.chunk.js","sourcesContent":["const BASE_URL = \"https://api.coinpaprika.com/v1\";\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: String) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((r) => r.json());\r\n}\r\n\r\nexport function fetchCoinPriceInfo(coinId: String) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((r) => r.json());\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: String) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((r) => r.json());\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinPriceInfo } from \"../api\";\r\n\r\ninterface IPrice {\r\n  coinId: string;\r\n}\r\n\r\ninterface IPriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_15m: number;\r\n      percent_change_30m: number;\r\n      percent_change_1h: number;\r\n      percent_change_6h: number;\r\n      percent_change_12h: number;\r\n      percent_change_24h: number;\r\n      percent_change_7d: number;\r\n      percent_change_30d: number;\r\n      percent_change_1y: number;\r\n      ath_price: number;\r\n      ath_date: string;\r\n      percent_from_price_ath: number;\r\n    };\r\n  };\r\n}\r\n\r\nconst ChartBox = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  padding: 20px 30px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  line-height: 1.4;\r\n`;\r\n\r\nconst ChartLine = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Price = ({ coinId }: IPrice) => {\r\n  const { isLoading, data } = useQuery<IPriceData>([\"price\", coinId], () =>\r\n    fetchCoinPriceInfo(coinId)\r\n  );\r\n  const priceData = data?.quotes.USD;\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading price...\"\r\n      ) : (\r\n        <ChartBox>\r\n          <ChartLine>\r\n            <span>Rank</span>\r\n            <span>{data?.rank}</span>\r\n          </ChartLine>\r\n          <ChartLine>\r\n            <span>Total Supply</span>\r\n            <span>{data?.total_supply}</span>\r\n          </ChartLine>\r\n          <ChartLine>\r\n            <span>Price</span>\r\n            <span>{priceData?.price}</span>\r\n          </ChartLine>\r\n          <ChartLine>\r\n            <span>Market Cap</span>\r\n            <span>{priceData?.market_cap}</span>\r\n          </ChartLine>\r\n          <ChartLine>\r\n            <span>Ath Date</span>\r\n            <span>{priceData?.ath_date}</span>\r\n          </ChartLine>\r\n          <ChartLine>\r\n            <span>Ath Price</span>\r\n            <span>{priceData?.ath_price}</span>\r\n          </ChartLine>\r\n        </ChartBox>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Price;\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface IChart {\r\n  coinId: string;\r\n}\r\n\r\ninterface IChartData {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nconst Chart = ({ coinId }: IChart) => {\r\n  const { isLoading, data: chartData } = useQuery<IChartData[]>(\r\n    [\"chart\", coinId],\r\n    () => fetchCoinHistory(coinId)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading charts...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: chartData?.map((day) => ({\r\n                x: day.time_close,\r\n                y: [day.open, day.high, day.low, day.close],\r\n              })),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: \"dark\",\r\n            },\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 350,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            title: {\r\n              text: \"CandleStick Chart\",\r\n              align: \"left\",\r\n            },\r\n            grid: { show: false },\r\n            yaxis: {\r\n              show: false,\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import {\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport Price from \"./Price\";\r\nimport Chart from \"./Chart\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchCoinInfo, fetchCoinPriceInfo } from \"../api\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: ${(props) => props.theme.textBg};\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\nconst Tab = styled.span<{ isActive: Boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: ${(props) => props.theme.textBg};\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  a {\r\n    display: block;\r\n  }\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n`;\r\nconst BackBtn = styled.div`\r\n  padding: 5px 10px;\r\n  background-color: ${(props) => props.theme.textBg};\r\n  font-size: 10px;\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 10px;\r\n`;\r\n\r\ninterface IRouteParams {\r\n  coinId: string;\r\n}\r\ninterface IRouteState {\r\n  name: string;\r\n}\r\ninterface IInfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  contract: string;\r\n  platform: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface IPriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_15m: number;\r\n      percent_change_30m: number;\r\n      percent_change_1h: number;\r\n      percent_change_6h: number;\r\n      percent_change_12h: number;\r\n      percent_change_24h: number;\r\n      percent_change_7d: number;\r\n      percent_change_30d: number;\r\n      percent_change_1y: number;\r\n      ath_price: number;\r\n      ath_date: string;\r\n      percent_from_price_ath: number;\r\n    };\r\n  };\r\n}\r\n\r\nconst Coin = () => {\r\n  const { coinId } = useParams<IRouteParams>();\r\n  const { state } = useLocation<IRouteState>();\r\n  const priceMatch = useRouteMatch(`/${coinId}/price`);\r\n  const chartMatch = useRouteMatch(`/${coinId}/chart`);\r\n\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<IInfoData>(\r\n    [\"coin\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickerLoading, data: tickerData } = useQuery<IPriceData>(\r\n    [\"ticker\", coinId],\r\n    () => fetchCoinPriceInfo(coinId),\r\n    { refetchInterval: 10000 }\r\n  );\r\n  const loading = infoLoading || tickerLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <BackBtn>\r\n          <Link to=\"/\">Go Back</Link>\r\n        </BackBtn>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <>\r\n          <BackBtn>Go Back</BackBtn>\r\n          <Loader>Loading...</Loader>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>{infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>{tickerData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickerData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickerData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/:coinId/price`}>\r\n              <Price coinId={coinId} />\r\n            </Route>\r\n            <Route path={`/:coinId/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","import { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: ${(props) => props.theme.textBg};\r\n  color: ${(props) => props.theme.textColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  font-size: 30px;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nconst Moon = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 20px;\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50%;\r\n  background-color: #f7e545;\r\n  div {\r\n    width: 23px;\r\n    height: 23px;\r\n    border-radius: 50%;\r\n    background-color: ${(props) => props.theme.bgColor};\r\n  }\r\n`;\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Coin</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Moon>\r\n          <div></div>\r\n        </Moon>\r\n        <Title>Coin</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{ pathname: `/${coin.id}`, state: { name: coin.name } }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                  alt=\"\"\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coins;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/:coinId\">\r\n          <Coin />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import { createGlobalStyle } from \"styled-components\"; //전역스코프에 올려준다.\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;500;800&family=Rubik:wght@500&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n* {\n  box-sizing: border-box;\n}\n`;\n\nfunction App() {\n  return (\n    <div>\n      <>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme } from \"./theme\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"#f5f6fa\",\r\n  accentColor: \"#9c88ff\",\r\n  textBg: \"rgba(0, 0, 0, 0.5)\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"whitesmoke\",\r\n  textColor: \"black\",\r\n  accentColor: \"#9c88ff\",\r\n  textBg: \"rgba(0, 0, 0, 0.2)\",\r\n};\r\n"],"sourceRoot":""}